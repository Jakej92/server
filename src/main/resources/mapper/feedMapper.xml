<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.pickcourse.mapper.FeedMapper">
    <insert id="postFeedWrite">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT SEQ_FEED.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_FEED
            (ID,
             FEED_CONTENT)
        VALUES(#{id},
               #{feedContent})
    </insert>

    <insert id="postRealWrite">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT SEQ_FEED.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_FEED
        (ID,
        FEED_CONTENT)
        VALUES(#{id},
        #{feedContent})
    </insert>

    <select id="getFeedModify" resultType="feedDTO">
        SELECT
            ID,
            FEED_CONTENT,
            CREATED_DATE,
            UPDATED_DATE
        FROM TBL_FEED
        WHERE ID = #{id}
    </select>

    <select id="getFeedList" resultType="feedListDTO">
        SELECT
            f.ID,
            f.FEED_CONTENT,
            f.CREATED_DATE,
            f.UPDATED_DATE,
            COALESCE(g.MEMBER_ID, r.MEMBER_ID, t.MEMBER_ID) AS MEMBER_ID,
            r.PLAN_ID
        FROM TBL_FEED f
                 LEFT JOIN TBL_GENERAL_FEED g ON g.ID = f.ID
                 LEFT JOIN TBL_REAL_FEED r ON r.ID = f.ID
                 LEFT JOIN TBL_TOGETHER_FEED t ON t.ID = f.ID
        ORDER BY f.CREATED_DATE DESC
    </select>

    <select id="getFeedModifyList" resultType="feedListDTO">
        SELECT
            f.ID,
            f.FEED_CONTENT,
            f.CREATED_DATE,
            f.UPDATED_DATE,
            COALESCE(g.MEMBER_ID, r.MEMBER_ID, t.MEMBER_ID) AS MEMBER_ID,
            r.PLAN_ID
        FROM TBL_FEED f
                 LEFT JOIN TBL_GENERAL_FEED g ON g.ID = f.ID
                 LEFT JOIN TBL_REAL_FEED r ON r.ID = f.ID
                 LEFT JOIN TBL_TOGETHER_FEED t ON t.ID = f.ID
        WHERE f.ID = #{id}
        ORDER BY f.CREATED_DATE DESC
    </select>

    <select id="getReportDetail" resultType="replyDetailDTO">
        SELECT
            CASE
                WHEN GF.ID IS NOT NULL THEN 'GENERAL FEED'
                WHEN RF.ID IS NOT NULL THEN 'REAL FEED'
                WHEN TF.ID IS NOT NULL THEN 'TOGETHER FEED'
                ELSE 'UNKNOWN'
            END AS source,
            F.ID AS id,
            COALESCE(GF.MEMBER_ID, RF.MEMBER_ID, TF.MEMBER_ID) AS memberId, -- MEMBER_ID를 각 테이블에서 가져옴
            M.MEMBER_NICKNAME AS memberNickname,
            TO_CHAR(F.CREATED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS createdDate,
            F.FEED_CONTENT AS content
        FROM TBL_FEED F
                 LEFT JOIN TBL_GENERAL_FEED GF ON F.ID = GF.ID
                 LEFT JOIN TBL_REAL_FEED RF ON F.ID = RF.ID
                 LEFT JOIN TBL_TOGETHER_FEED TF ON F.ID = TF.ID
                 LEFT JOIN TBL_MEMBER M ON COALESCE(GF.MEMBER_ID, RF.MEMBER_ID, TF.MEMBER_ID) = M.ID
        WHERE F.ID   =  #{id}
    </select>

    <select id="selectTypeOfFeed"  resultType="string">
        SELECT
            CASE
                WHEN GF.ID IS NOT NULL THEN 'GENERAL FEED'
                WHEN RF.ID IS NOT NULL THEN 'REAL FEED'
                WHEN TF.ID IS NOT NULL THEN 'TOGETHER FEED'
                ELSE 'UNKNOWN'
                END AS source
        FROM TBL_FEED F
                 LEFT JOIN TBL_GENERAL_FEED GF ON F.ID = GF.ID
                 LEFT JOIN TBL_REAL_FEED RF ON F.ID = RF.ID
                 LEFT JOIN TBL_TOGETHER_FEED TF ON F.ID = TF.ID
        WHERE F.ID   =  #{id}
    </select>

    <update id="PostFeedModify">
        UPDATE TBL_FEED
        SET
            FEED_CONTENT  =  #{feedContent},
            UPDATED_DATE   =  SYSDATE
        WHERE ID = #{id}

    </update>

    <delete id="deleteFeedModify">
        DELETE
        FROM TBL_FEED
        WHERE ID = #{id}
    </delete>

</mapper>