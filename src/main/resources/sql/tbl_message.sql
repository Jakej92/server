-- SELECT SEQ_MESSAGE.CURRVAL FROM DUAL; -- 인설트에 들어가는 VO

-- 메세지 슈퍼키
CREATE SEQUENCE SEQ_MESSAGE;
CREATE TABLE TBL_MESSAGE(
        ID NUMBER CONSTRAINT PK_MESSAGE_ALL PRIMARY KEY,
        MESSAGE_ALL_CONTENT VARCHAR2(1000) NOT NULL,
        MESSAGE_ALL_DATE DATE DEFAULT SYSDATE
);

-- 받은 쪽지
CREATE TABLE TBL_RECEIVE_MESSAGE(
        ID NUMBER CONSTRAINT PK_RECEIVE_MESSAGE PRIMARY KEY,
        RECEIVER_ID NUMBER NOT NULL,
        SENDER_ID NUMBER NOT NULL,
        RECEIVE_MESSAGE_CHECK VARCHAR2(1000) DEFAULT 'FALSE',
        CONSTRAINT FK_RECEIVE_MESSAGE_MESSAGE FOREIGN KEY(ID)
        REFERENCES TBL_MESSAGE(ID),
        CONSTRAINT FK_RECEIVE_MESSAGE_RECEIVER FOREIGN KEY(RECEIVER_ID)
        REFERENCES TBL_MEMBER(ID),
        CONSTRAINT FK_RECEIVE_MESSAGE_SENDER FOREIGN KEY(SENDER_ID)
        REFERENCES TBL_MEMBER(ID)
);

-- 보낸 쪽지
CREATE TABLE TBL_SEND_MESSAGE(
        ID NUMBER CONSTRAINT PK_SEND_MESSAGE PRIMARY KEY,
        RECEIVER_ID NUMBER NOT NULL,
        SENDER_ID NUMBER NOT NULL,
        CONSTRAINT FK_SEND_MESSAGE_MESSAGE FOREIGN KEY(ID)
        REFERENCES TBL_MESSAGE(ID),
        CONSTRAINT FK_SEND_MESSAGE_RECEIVER FOREIGN KEY(RECEIVER_ID)
        REFERENCES TBL_MEMBER(ID),
        CONSTRAINT FK_SEND_MESSAGE_SENDER FOREIGN KEY(SENDER_ID)
        REFERENCES TBL_MEMBER(ID)
);


CREATE TABLE TBL_RECEIVE_MESSAGE_FILE (
        ID NUMBER CONSTRAINT PK_RECEIVE_MESSAGE_FILE PRIMARY KEY,
        RECEIVE_MESSAGE_FILE_ID NUMBER NOT NULL,
        CONSTRAINT FK_RECEIVE_MESSAGE_FILE FOREIGN KEY (ID)
        REFERENCES TBL_FILE(ID),
        CONSTRAINT FK_RECEIVE_MESSAGE_FILE_FILE FOREIGN KEY (RECEIVE_MESSAGE_FILE_ID)
        REFERENCES TBL_RECEIVE_MESSAGE(ID)
);

-- CREATE TABLE TBL_RECEIVE_MESSAGE_FILE(
--         ID NUMBER CONSTRAINT PK_RECEIVE_MESSAGE_FILE PRIMARY KEY,
--         RECEIVE_MESSAGE_ID NUMBER NOT NULL,
--         CONSTRAINT FK_RECEIVE_MESSAGE_FILE FOREIGN KEY(ID)
--         REFERENCES TBL_FILE(ID),
--         CONSTRAINT FK_RECEIVE_MESSAGE FOREIGN KEY(RECEIVE_MESSAGE_ID)
--         REFERENCES TBL_RECEIVE_MESSAGE(ID)
-- );

CREATE TABLE TBL_SEND_MESSAGE_FILE (
        ID NUMBER CONSTRAINT PK_SEND_MESSAGE_FILE PRIMARY KEY,
        SEND_MESSAGE_FILE_ID NUMBER NOT NULL,
        CONSTRAINT FK_SEND_MESSAGE_FILE FOREIGN KEY (ID)
        REFERENCES TBL_FILE(ID),
        CONSTRAINT FK_SEND_MESSAGE_FILE_FILE FOREIGN KEY (SEND_MESSAGE_FILE_ID)
        REFERENCES TBL_SEND_MESSAGE(ID)
);

-- CREATE TABLE TBL_SEND_MESSAGE_FILE(
--         ID NUMBER CONSTRAINT PK_SEND_MESSAGE_FILE PRIMARY KEY,
--         SEND_MESSAGE_ID NUMBER NOT NULL,
--         CONSTRAINT FK_SEND_MESSAGE_FILE FOREIGN KEY(ID)
--         REFERENCES TBL_FILE(ID),
--         CONSTRAINT FK_SEND_MESSAGE FOREIGN KEY(SEND_MESSAGE_ID)
--         REFERENCES TBL_SEND_MESSAGE(ID)
-- );

SELECT ID,
       SENDER_ID,
       RECEIVER_ID,
       MEMBER_NICKNAME AS RECEIVER_ID,
       MESSAGE_ALL_CONTENT AS CONTENT,
       RECEIVE_MESSAGE_CHECK FROM (
    SELECT ROWNUM R ,
              ID,
              SENDER_ID,
              RECEIVER_ID,
              MEMBER_NICKNAME,
              MESSAGE_ALL_CONTENT,
              RECEIVE_MESSAGE_CHECK
       FROM (SELECT RM.ID,
                    RM.SENDER_ID,
                    RM.RECEIVER_ID,
                    M.MEMBER_NICKNAME,
                    MSG.MESSAGE_ALL_CONTENT,
                    TO_CHAR(MSG.MESSAGE_ALL_DATE, 'YYYY.MM.DD'),
                    RM.RECEIVE_MESSAGE_CHECK
             FROM TBL_RECEIVE_MESSAGE RM
                      JOIN TBL_MESSAGE MSG ON RM.ID = MSG.ID
                      JOIN TBL_MEMBER M ON RM.SENDER_ID = M.ID
             WHERE RM.RECEIVER_ID = 2
             ORDER BY MSG.MESSAGE_ALL_DATE DESC)
       WHERE ROWNUM <= 5
       )
WHERE R >=1;


SELECT * FROM TBL_FILE;
SELECT * FROM TBL_SEND_MESSAGE_FILE;
SELECT * FROM TBL_RECEIVE_MESSAGE_FILE;

CREATE VIEW VIEW_SEND_MESSAGE_FILE_FILE AS
(
    SELECT F.ID, FILE_PATH, FILE_NAME, FILE_SIZE, CREATE_DATE, UPDATE_DATE, SEND_MESSAGE_FILE_ID
    FROM TBL_FILE F JOIN TBL_SEND_MESSAGE_FILE SF
    ON F.ID = SF.ID
);

CREATE VIEW VIEW_RECEIVE_MESSAGE_FILE_FILE AS
(
    SELECT F.ID, FILE_PATH, FILE_NAME, FILE_SIZE, CREATE_DATE, UPDATE_DATE, RECEIVE_MESSAGE_FILE_ID
    FROM TBL_FILE F JOIN TBL_RECEIVE_MESSAGE_FILE RF
    ON F.ID = RF.ID
);