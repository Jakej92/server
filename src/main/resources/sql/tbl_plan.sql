CREATE SEQUENCE SEQ_PLAN;
create table TBL_PLAN
(
    ID NUMBER constraint PK_PLAN primary key,
    PLAN_NAME          VARCHAR2(1000) not null,
    PLAN_START_DATE    DATE default SYSDATE,
    PLAN_END_DATE      DATE default SYSDATE,
    PLAN_DEADLINE      DATE,
    PLAN_MAX_PERSONNEL NUMBER         not null,
    PLAN_MIN_PERSONNEL NUMBER         not null,
    PLAN_PRICE         NUMBER         not null,
    PLAN_START_ADDRESS VARCHAR2(2000) not null,
    PLAN_CONTENT       VARCHAR2(2000) not null,
    PLAN_FILE_PATH     VARCHAR2(2000),
    PLAN_FILE_SIZE     VARCHAR2(2000),
    PLAN_FILE_NAME     VARCHAR2(2000),
    MEMBER_ID NUMBER not null
        constraint FK_PLAN_MEMBER
            references TBL_MEMBER
                on delete cascade,
    COURSE_ID NUMBER not null
        constraint FK_PLAN_COURSE
            references TBL_COURSE
                on delete cascade,
    CREATED_DATE       DATE default SYSDATE,
    UPDATED_DATE       DATE default SYSDATE
);

SELECT * FROM TBL_PLAN
ORDER BY ID DESC;
SELECT * FROM TBL_WRITE_PREPARE
ORDER BY ID DESC;
SELECT * FROM TBL_SCHEDULE
    ORDER BY ID DESC ;

DROP TABLE TBL_PLAN;
DROP SEQUENCE SEQ_PLAN;
SELECT SEQ_PLAN.NEXTVAL FROM DUAL


-- SELECT
--     P.ID,
--     P.PLAN_NAME,
--     P.PLAN_START_DATE,
--     P.PLAN_END_DATE,
--     P.PLAN_DEADLINE,
--     P.PLAN_MAX_PERSONNEL,
--     P.PLAN_MIN_PERSONNEL,
--     P.PLAN_PRICE,
--     P.PLAN_START_ADDRESS,
--     P.PLAN_CONTENT,
--     P.PLAN_FILE_PATH,
--     P.PLAN_FILE_SIZE,
--     P.PLAN_FILE_NAME,
--     P.MEMBER_ID,
--     P.COURSE_ID,
--     P.CREATED_DATE,
--     P.UPDATED_DATE,
--     E.EXCLUDE_CONTENTS,
--     I.INCLUDE_CONTENTS,
--     PRE.PREPARE_CONTENTS
-- FROM TBL_PLAN P
-- JOIN (
-- --     LISTAGG를 사용하면 하나의 행으로 묶이게 된다.
--         SELECT PLAN_ID, LISTAGG(EXCLUDE_CONTENT, ', ') WITHIN GROUP (ORDER BY EXCLUDE_CONTENT) AS EXCLUDE_CONTENTS
--         FROM TBL_WRITE_EXCLUDE
--         GROUP BY PLAN_ID
--     )
-- E ON P.ID = E.PLAN_ID
-- JOIN (
--         SELECT PLAN_ID, LISTAGG(INCLUDE_CONTENT, ', ') WITHIN GROUP (ORDER BY INCLUDE_CONTENT) AS INCLUDE_CONTENTS
--         FROM TBL_WRITE_INCLUDE
--         GROUP BY PLAN_ID
--     )
-- I ON P.ID = I.PLAN_ID
-- JOIN (
--         SELECT PLAN_ID, LISTAGG(PREPARE_CONTENT, ', ') WITHIN GROUP (ORDER BY PREPARE_CONTENT) AS PREPARE_CONTENTS
--         FROM TBL_WRITE_PREPARE
--         GROUP BY PLAN_ID
--     )
-- PRE ON P.ID = PRE.PLAN_ID;
--
-- CREATE VIEW VIEW_PLAN_EX_IN_PRE AS
-- SELECT
--     P.ID,
--     P.PLAN_NAME,
--     P.PLAN_START_DATE,
--     P.PLAN_END_DATE,
--     P.PLAN_DEADLINE,
--     P.PLAN_MAX_PERSONNEL,
--     P.PLAN_MIN_PERSONNEL,
--     P.PLAN_PRICE,
--     P.PLAN_START_ADDRESS,
--     P.PLAN_CONTENT,
--     P.PLAN_FILE_PATH,
--     P.PLAN_FILE_SIZE,
--     P.PLAN_FILE_NAME,
--     P.MEMBER_ID,
--     P.COURSE_ID,
--     P.CREATED_DATE,
--     P.UPDATED_DATE,
--     E.EXCLUDE_CONTENTS,
--     I.INCLUDE_CONTENTS,
--     PRE.PREPARE_CONTENTS
-- FROM TBL_PLAN P
--          JOIN (
-- --     LISTAGG를 사용하면 하나의 행으로 묶이게 된다.
--     SELECT PLAN_ID, LISTAGG(EXCLUDE_CONTENT, ', ') WITHIN GROUP (ORDER BY EXCLUDE_CONTENT) AS EXCLUDE_CONTENTS
--     FROM TBL_WRITE_EXCLUDE
--     GROUP BY PLAN_ID
-- )
--     E ON P.ID = E.PLAN_ID
--          JOIN (
--     SELECT PLAN_ID, LISTAGG(INCLUDE_CONTENT, ', ') WITHIN GROUP (ORDER BY INCLUDE_CONTENT) AS INCLUDE_CONTENTS
--     FROM TBL_WRITE_INCLUDE
--     GROUP BY PLAN_ID
-- )
--     I ON P.ID = I.PLAN_ID
--          JOIN (
--     SELECT PLAN_ID, LISTAGG(PREPARE_CONTENT, ', ') WITHIN GROUP (ORDER BY PREPARE_CONTENT) AS PREPARE_CONTENTS
--     FROM TBL_WRITE_PREPARE
--     GROUP BY PLAN_ID
-- )
--     PRE ON P.ID = PRE.PLAN_ID;
--
-- SELECT * FROM VIEW_PLAN_EX_IN_PRE;
